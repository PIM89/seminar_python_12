import telebot
import config
from telebot import types
import random
from datetime import datetime
import requests

bot = telebot.TeleBot(config.token)

@bot.message_handler(commands=['start'])
def start(message):
    stiker = open('stikers/smeh.tgs', 'rb')
    bot.send_sticker(message.chat.id, stiker)    
    user_full_name = message.from_user.full_name
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {user_full_name} ‚úåÔ∏è\n'
    '–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:\n'
    '–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞ (–¥–µ–ª–∞—Ç—å –∏–ª–∏ –Ω–µ –¥–µ–ª–∞—Ç—å)\n'
    '–ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–∞ –±–∏—Ç–∫–æ–∏–Ω–∞\n'
    '–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n'
    '–ö–∞–∫ –¥–µ–ª–∞?\n'
    '–ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ /button')
    # bot.send_message(message.chat.id, message)

@bot.message_handler(commands=['button'])
def button_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞")
    item2 = types.KeyboardButton("–ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–∞ –±–∏—Ç–∫–æ–∏–Ω–∞")
    item3 = types.KeyboardButton("–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    item4 = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞?")
    markup.add(item1, item2, item3, item4)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ', reply_markup=markup)
    
@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.chat.type == 'private':
        if message.text == '–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞':
            number = random.randint(0, 2)
            if number == 0:
                bot.send_message(message.chat.id, '–û—Ä–µ–ª! –°–¥–µ–ª–∞–π —ç—Ç–æ!')
            elif number == 1:
                bot.send_message(message.chat.id, '–†–µ—à–∫–∞! –ù–µ –¥–µ–ª–∞–π! ü•≤')
        elif message.text == '–ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–∞ –±–∏—Ç–∫–æ–∏–Ω–∞':
            bot.send_message(message.chat.id, get_data())
        elif message.text == '–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            kn1 = types.KeyboardButton("–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
            kn2 = types.KeyboardButton("–ù–∞–∑–∞–¥")
            markup.add(kn1, kn2)
            bot.send_message(message.chat.id, '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=markup)
        elif message.text == '–ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            item1 = types.KeyboardButton("–û—Ä–µ–ª –∏–ª–∏ —Ä–µ—à–∫–∞")
            item2 = types.KeyboardButton("–ó–∞–ø—Ä–æ—Å –∫—É—Ä—Å–∞ –±–∏—Ç–∫–æ–∏–Ω–∞")
            item3 = types.KeyboardButton("–ó–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
            item4 = types.KeyboardButton("–ö–∞–∫ –¥–µ–ª–∞?")
            markup.add(item1, item2, item3, item4)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ', reply_markup=markup)
        elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ü–ª–æ—Ö–æ", callback_data='bad')
            markup.add(item1, item2)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç :)', reply_markup=markup)

def get_data():
    req = requests.get('https://yobit.net/api/3/ticker/btc_usd')
    response = req.json()
    sell_price = response['btc_usd']['sell']
    return f"{datetime.now().strftime('%Y-%m-%d %H:%M')}\n–°—Ç–æ–∏–º–æ—Å—Ç—å BTC: {sell_price}$"

@bot.callback_query_handler(func=lambda call:True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
               bot.send_message(call.message.chat.id, '‚úåÔ∏è')
            elif call.data == 'bad':
               bot.send_message(call.message.chat.id, '–°–æ—á—É–≤—Å—Ç–≤—É—é!')
            bot.edit_message_text(chat_id = call.message.chat.id, message_id=call.message.message_id, text='–ö–∞–∫ –¥–µ–ª–∞?', reply_markup=None)
    except Exception as e:
        print(repr(e))

bot.infinity_polling()